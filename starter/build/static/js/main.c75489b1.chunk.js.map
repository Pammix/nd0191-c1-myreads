{"version":3,"sources":["components/Book.js","components/ListBooks.js","BooksAPI.js","components/SearchBook.js","App.js","index.js"],"names":["Book","book","updateShelfBook","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","value","shelf","onChange","disabled","title","authors","map","author","ListBooks","books","onUpdateBook","onSearch","handelUpdateBook","event","filter","e","id","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","body","JSON","stringify","then","res","json","search","query","maxResults","data","SearchBook","useState","setQuery","queryBooks","setQueryBooks","type","placeholder","searchBooks","a","BooksAPI","r","undefined","Array","isArray","map1","Map","b","set","el","get","updateQuery","target","console","log","App","setBooks","useEffect","getBooks","handelUpdate","length","concat","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c75489b1.chunk.js","sourcesContent":["const Book = ({ book, updateShelfBook }) => {\n  return (\n    <div className=\"book\">\n      <div className=\"book-top\">\n        <div\n          className=\"book-cover\"\n          style={{\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${book?.imageLinks?.smallThumbnail})`\n          }}\n        ></div>\n        <div className=\"book-shelf-changer\">\n          <select\n            value={book.shelf ? book.shelf : 'none'}\n            onChange={updateShelfBook}\n          >\n            <option value=\"move\" disabled>\n              Move to...\n            </option>\n            <option value=\"currentlyReading\">Currently Reading</option>\n            <option value=\"wantToRead\">Want to Read</option>\n            <option value=\"read\">Read</option>\n            <option value=\"none\">None</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"book-title\">{book?.title}</div>\n      {book?.authors?.map((author) => (\n        <div className=\"book-authors\" key={author}>\n          {author}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Book;\n","import '../App.css';\nimport Book from '../components/Book';\nimport { Link } from 'react-router-dom';\n\nconst ListBooks = ({ books, onUpdateBook, onSearch }) => {\n  const handelUpdateBook = (book, event) => {\n    onUpdateBook(book, event);\n  };\n\n  return (\n    <div className=\"list-books-content\">\n      <div className=\"bookshelf\">\n        {!onSearch && (\n          <div>\n            <h2 className=\"bookshelf-title\">Currently Reading </h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {books\n                  .filter((book) => book.shelf === 'currentlyReading')\n                  .map((book) => (\n                    <li key={book.id}>\n                      <Book\n                        key={book.id}\n                        book={book}\n                        updateShelfBook={(e) => handelUpdateBook(book, e)}\n                      />\n                    </li>\n                  ))}\n              </ol>\n            </div>\n\n            <h2 className=\"bookshelf-title\"> Want To Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {books\n                  .filter((book) => book.shelf === 'wantToRead')\n                  .map((book) => (\n                    <li key={book.id}>\n                      <Book\n                        key={book.id}\n                        book={book}\n                        updateShelfBook={(e) => handelUpdateBook(book, e)}\n                      />\n                    </li>\n                  ))}\n              </ol>\n            </div>\n            <h2 className=\"bookshelf-title\"> Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {books\n                  .filter((book) => book.shelf === 'read')\n                  .map((book) => (\n                    <li key={book.id}>\n                      <Book\n                        key={book.id}\n                        book={book}\n                        updateShelfBook={(e) => handelUpdateBook(book, e)}\n                      />\n                    </li>\n                  ))}\n              </ol>\n            </div>\n            <div className=\"open-search\">\n              <Link to=\"/search\" className=\"add-contact\">\n                Add Book\n              </Link>\n            </div>\n          </div>\n        )}\n        {onSearch && (\n          <div>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {books?.map((book) => (\n                  <li key={book.id}>\n                    <Book\n                      key={book.id}\n                      book={book}\n                      updateShelfBook={(e) => handelUpdateBook(book, e)}\n                    />\n                  </li>\n                ))}\n              </ol>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ListBooks;\n","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import '../App.css';\nimport ListBooks from './ListBooks';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\n\nconst SearchBook = ({ books, onUpdateBook }) => {\n  const [query, setQuery] = useState('');\n\n  const [queryBooks, setQueryBooks] = useState([]);\n\n  const updateQuery = (query) => {\n    setQuery(query);\n    if (query) {\n      const searchBooks = async () => {\n        const res = await BooksAPI.search(query, 100);\n        let r = res === undefined ? [] : res;\n        if (Array.isArray(r)) {\n          const map1 = new Map();\n          books.map((b) => map1.set(b.title, b.shelf));\n          r.map(\n            (el) =>\n              (el.shelf =\n                map1.get(el.title) !== undefined ? map1.get(el.title) : 'none')\n          );\n          setQueryBooks(r);\n        } else {\n          setQueryBooks([]);\n        }\n      };\n      searchBooks();\n    } else {\n      setQueryBooks([]);\n    }\n  };\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link to=\"/\" className=\"close-search\">\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={query}\n            onChange={(event) => updateQuery(event.target.value)}\n          />\n        </div>\n      </div>\n      {console.log(queryBooks)}\n      <ListBooks\n        books={queryBooks}\n        onSearch={true}\n        onUpdateBook={onUpdateBook}\n      />\n    </div>\n  );\n};\n\nexport default SearchBook;\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport ListBooks from './components/ListBooks';\nimport SearchBook from './components/SearchBook';\nimport * as BooksAPI from './BooksAPI';\nimport { Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n\n  const handelUpdate = async (book, event) => {\n    BooksAPI.update(book, event.target.value);\n    console.log(books);\n    console.log(book.shelf);\n    if (books.filter((b) => b.id === book.id).length > 0) {\n      setBooks(\n        books.map((el) =>\n          el.title === book.title ? { ...el, shelf: event.target.value } : el\n        )\n      );\n    } else {\n      console.log(book);\n      setBooks(books.concat({ ...book, shelf: event.target.value }));\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={\n            <ListBooks\n              books={books}\n              onUpdateBook={handelUpdate}\n              onSearch={false}\n            />\n          }\n        />\n        <Route\n          exact\n          path=\"/search\"\n          element={<SearchBook books={books} onUpdateBook={handelUpdate} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}